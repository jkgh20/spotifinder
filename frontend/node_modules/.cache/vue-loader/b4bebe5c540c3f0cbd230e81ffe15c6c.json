{"remainingRequest":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/Callback.vue?vue&type=style&index=0&id=b31ed416&scoped=true&lang=css&","dependencies":[{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/Callback.vue","mtime":1574378649564},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMyB7CiAgbWFyZ2luOiA0MHB4IDAgMDsKfQp1bCB7CiAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogIHBhZGRpbmc6IDA7Cn0KbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQphIHsKICBjb2xvcjogIzQyYjk4MzsKfQo="},{"version":3,"sources":["Callback.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Callback.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"callback\">\n\n    <h2>CALLBACK</h2>\n\n    <h5>Selected Cities</h5>\n    <ul v-if=\"selectedCities\">\n      <li v-for=\"city in selectedCities\" v-bind:key=\"city\" v-on:click=\"transferArrayValue(selectedCities, availableCities, city)\">\n        {{city}}\n      </li>\n    </ul>\n\n    <h5>Available Cities</h5>\n    <ul v-if=\"availableCities\">\n      <li v-for=\"city in availableCities\" v-bind:key=\"city\" v-on:click=\"transferArrayValue(availableCities, selectedCities, city)\">\n        {{city}}\n      </li>\n    </ul>\n\n    <h5>Selected Genres</h5>\n    <ul v-if=\"selectedGenres\">\n      <li v-for=\"genre in selectedGenres\" v-bind:key=\"genre\" v-on:click=\"transferArrayValue(selectedGenres, availableGenres, genre)\">\n        {{genre}}\n      </li>\n    </ul>\n\n    <h5>Available Genres</h5>\n    <ul v-if=\"availableGenres\">\n      <li v-for=\"genre in availableGenres\" v-bind:key=\"genre\" v-on:click=\"transferArrayValue(availableGenres, selectedGenres, genre)\">\n        {{genre}}\n      </li>\n    </ul>\n\n    <h2>Events Data:</h2>\n    <p>THIS component's spotify state: {{ spotifyStateString }}</p>\n\n    <div v-if=\"localEvents\">\n      {{localEvents}}\n    </div>\n\n    <div v-if=\"topTracks\">\n      {{topTracks.length}}\n    </div>\n\n    <div v-if=\"artistIDs\">\n      <button v-on:click=\"buildPlaylist('Spooky Title', 'Spooooky Description!')\">Build Playlist</button>\n    </div>\n\n    <h2>Playlist Status:</h2>\n    <h2 v-if=\"playlistStatus\">{{playlistStatus}}</h2>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'callback',\n  data () {\n    return {\n      localEvents: null,\n      playlistStatus: null,\n      spotifyStateString: null,\n      selectedCities: null,\n      availableCities: null,\n      selectedGenres: null,\n      availableGenres: null,\n      topTracks: null,\n      artistIDs: null\n    }\n  },\n  mounted () {\n    this.getAvailableCities();\n    this.getAvailableGenres();\n    //this.getLocalEvents('[Austin TX,Washington DC,Nashville TN]', '[rock,electronic,hip-hop]');\n  },\n  methods: {\n    transferArrayValue: function(sourceArray, targetArray, value) {\n      var index = sourceArray.indexOf(value);\n      if (index > -1) {\n        if (!(targetArray == this.selectedCities && targetArray.length == 6) && \n        !(targetArray == this.selectedGenres && targetArray.length == 10)) {\n          sourceArray.splice(index, 1);\n          targetArray.push(value);\n        }\n      }\n\n      if (this.selectedCities.length != 0 && this.selectedGenres.length != 0) {\n        this.getLocalEvents(this.selectedCities, this.selectedGenres);\n      } else {\n        this.localEvents = null;\n      }\n    },\n    getAvailableCities: function() {\n      var citiesURL = \"http://localhost:8081/cities\";\n\n      axios.get(citiesURL)\n        .then((response => {\n          this.availableCities = response.data;\n          this.selectedCities = new Array();\n        }));\n    },\n    getAvailableGenres: function() {\n      var genresURL = \"http://localhost:8081/genres\";\n\n      axios.get(genresURL)\n        .then((response => {\n          this.availableGenres = response.data;\n          this.selectedGenres = new Array();\n        }));\n    },\n    getLocalEvents: function (cities, genres) {\n      var cityString = this.arrayToQueryString(cities);\n      var genreString = this.arrayToQueryString(genres);\n\n      var localEventsURL = \"http://localhost:8081/localevents?cities=\" +\n      cityString +\n      \"&genres=\" +\n      genreString;\n\n      axios.get(localEventsURL)\n        .then((response => {\n          this.localEvents = response.data;\n          this.getArtistIDs(this.localEvents);\n        }));\n    },\n    arrayToQueryString: function (array) {\n      var queryString = '[';\n\n      for (var i = 0; i < array.length; i++) {\n        queryString = queryString.concat(array[i] + ',');\n      }\n\n      queryString = queryString.slice(0, -1).concat(']');\n      return queryString;\n    },\n    getArtistIDs: function(events) {\n      var artistIDsURL = \"http://localhost:8081/artistids\";\n\n      axios.post(artistIDsURL, JSON.stringify(events))\n        .then((response => {\n          this.artistIDs = response.data;\n        }));\n    },\n    buildPlaylist: function (name, desc) {\n      var topTracksURL = \"http://localhost:8081/toptracks\";\n      var buildPlaylistURL = \"http://localhost:8081/buildplaylist?name=\" +\n        name +\n        \"&desc=\" +\n        desc;\n\n      axios.post(topTracksURL, JSON.stringify(this.artistIDs))\n        .then((response => {\n          this.topTracks = response.data;\n          axios.post(buildPlaylistURL, JSON.stringify(response.data))\n            .then((response => {\n              this.playlistStatus = response.status;\n        }));\n        }));\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}