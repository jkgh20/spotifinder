{"remainingRequest":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/Home.vue?vue&type=template&id=8dc7cce2&scoped=true&","dependencies":[{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/Home.vue","mtime":1574493572166},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}