{"remainingRequest":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/LocalEvents.vue?vue&type=style&index=0&id=73fa9c64&scoped=true&lang=css&","dependencies":[{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/LocalEvents.vue","mtime":1572631948618},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["LocalEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LocalEvents.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n\n    <button v-on:click=\"redirectToURL\">Log In</button>\n    \n    <button v-on:click=\"buildPlaylist('MY special playlist!', 'My special playlists description')\">Build Playlist</button>\n\n    <h2>Event Data:</h2>\n    <h2 v-if=\"localEvents\">{{localEvents}}</h2>\n\n    <h2>Test Top Tracks Data:</h2>\n    <h2 v-if=\"topTracks\">{{topTracks}}</h2>\n\n    <h2>Playlist Status:</h2>\n    <h2 v-if=\"playlistStatus\">{{playlistStatus}}</h2>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String,\n  },\n  data () {\n    return {\n      localEvents: null,\n      topTracks: null,\n      playlistStatus: null,\n      spotifyAuthenticationUrl: null,\n      spotifyStateString: null\n    }\n  },\n  mounted () {\n    this.getLocalEvents('78759', '50');\n    this.setNewSpotifyAuthenticationUrl();\n  },\n  methods: {\n    getLocalEvents: function (postalCode, milesString) {\n      var localEventsURL = \"http://localhost:8081/localevents?postcode=\" +\n      postalCode +\n      \"&miles=\" +\n      milesString;\n\n      axios.get(localEventsURL)\n        .then((response => {\n          this.localEvents = response.data;\n          //this.getTopTracks(response.data);\n        }));\n    },\n    buildPlaylist: function (name, desc) {\n      var buildPlaylistURL = \"http://localhost:8081/buildplaylist?name=\" +\n        name +\n        \"&desc=\" +\n        desc;\n\n      var topTracks = this.getTopTracks(this.localEventData);\n\n      axios.post(buildPlaylistURL, JSON.stringify(topTracks))\n        .then((response => {\n          this.playlistStatus = response.data;\n        }));\n    },\n    getTopTracks: function (localEventData) {\n      axios.post(\"http://localhost:8081/toptracks\", JSON.stringify(localEventData))\n        .then((response => {\n          this.topTracks = response.data;\n          //this.buildPlaylist(\"Greetings from Axios\", \"A description for the ages.\", response.data);\n        }));\n    },\n    setNewSpotifyAuthenticationUrl: function() {\n      this.spotifyStateString = this.getRandomStateString()\n\n      var getAuthenticationRequestUrl = \"http://localhost:8081/authenticate?state=\"\n      +  this.spotifyStateString;\n\n      axios.get(getAuthenticationRequestUrl)\n        .then(response => {\n          this.spotifyAuthenticationUrl = response.data;\n        })\n    },\n    getRandomStateString: function() {\n      return Math.random().toString(36).substring(2,15) + Math.random().toString(36).substring(2,15)\n    },\n    redirectToURL: function() {\n      window.location = this.spotifyAuthenticationUrl;\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}