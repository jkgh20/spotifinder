{"remainingRequest":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/Callback.vue?vue&type=style&index=0&id=b31ed416&scoped=true&lang=css&","dependencies":[{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/src/components/Callback.vue","mtime":1574378646670},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bnguyen/Documents/GitHub/golang/src/otherside/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["Callback.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Callback.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"callback\">\n\n    <h2>CALLBACK</h2>\n\n    <h2>Events Data:</h2>\n    <p>THIS component's spotify state: {{ spotifyStateString }}</p>\n    <div v-if=\"localEvents\">\n      <button v-on:click=\"buildPlaylist('MY special playlist!', 'My special playlists description')\">Build Playlist</button>\n\n      <p>{{localEvents}}</p>\n\n    </div>\n\n    <h2>Playlist Status:</h2>\n    <h2 v-if=\"playlistStatus\">{{playlistStatus}}</h2>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'callback',\n  data () {\n    return {\n      localEvents: null,\n      playlistStatus: null,\n      spotifyStateString: null\n    }\n  },\n  mounted () {\n    this.getLocalEvents('[78759,22032,70001]', '[rock,electronic,hip-hop]');\n  },\n  methods: {\n    getLocalEvents: function (postalCodes, genres) {\n      var localEventsURL = \"http://localhost:8081/localevents?postcodes=\" +\n      postalCodes +\n      \"&genres=\" +\n      genres;\n\n      axios.get(localEventsURL)\n        .then((response => {\n          this.localEvents = response.data;\n        }));\n    },\n    buildPlaylist: function (name, desc) {\n      var buildPlaylistURL = \"http://localhost:8081/buildplaylist?name=\" +\n        name +\n        \"&desc=\" +\n        desc;\n\n      axios.post(\"http://localhost:8081/toptracks\", JSON.stringify(this.localEvents))\n        .then((response => {\n          axios.post(buildPlaylistURL, JSON.stringify(response.data))\n            .then((response => {\n              this.playlistStatus = response.data;\n          }));\n      }));\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}